---
layout: post
title:  "클린 코드를 위한 테스트 주도 개발 - Chapter01"
categories: ['tdd']
---

이 시리즈는 클린 코드를 위한 테스트 주도 개발 e-book을 진행하며 책과 최신버전에서의 차이점이나, 설명이 생략되어 있는 부분들에 대해 기술한다.

---

## 시작 전 필요사항
이 책에서 진행하는 TDD프로젝트는 `pyenv`와 `pyenv-virtualenv`를 사용하는 환경에서 진행했다.  
자세한 내용은 [pyenv에 대한 포스팅](https://lhy.kr/configuring-the-python-development-environment-with-pyenv-and-virtualenv)을 참조한다.

프로젝트는 홈 폴더의 `projects`폴더에 `tdd`폴더를 만들고, 그 내부에 가상환경을 생성한 후 진행한다. 파이썬은 `3.6.1`버전을 사용한다.

```
➜ cd ~/
➜ mkdir projects
➜ cd projects
➜ mkdir tdd
➜ cd tdd
➜ pyenv virtualenv 3.6.1 tdd
➜ pyenv local tdd
```

이후 `pip`를 이용해 `django`, `selenium`을 설치하고, `brew`를 이용해 `Chromedriver`를 설치한다. `django`는 `1.11.x`버전을 사용한다.

```
(tdd) ➜ pip install 'django<1.12'
(tdd) ➜ pip install selenium
(tdd) ➜ brew install chromedriver
```

## 첫 번째 functional_tests.py

그리고 첫 번째`functional_tests.py`는 아래와 같이 `FireFox`를 `Chrome`으로 변경한다. 본인은 파일이름이 너무 길다고 생각해 앞으로 `ft.py`파일명을 사용한다.

```python
# ft.py
from selenium import webdriver

browser = webdriver.Chrome()
browser.get('http://localhost:8000')

assert 'Django' in browser.title
```

`pyenv`를 사용할 경우, `python3 manage.py ...`라고 실행할 필요없이 `python manage.py ...`또는 `./manage.py ...`로 같은 명령을 실행 가능하다.


## Starting Git Repository
책에서는 `.gitignore`파일을 생성하면서 `git`에서 파일을 추가하고 `unstage`로 바꾸는 여러 작업을 한다. 헷갈릴 수 있으니 `.gitignore`파일은 [gitignore.io(macOS, Python, Pycharm, Django, Linux)](https://www.gitignore.io/api/macos%2Clinux%2Cdjango%2Cpython%2Cpycharm)의 내용을 그대로 사용하며, 이 파일의 맨 상단에 `.idea/`를 추가해준다 (`Pycharm`에서 사용하는 폴더명)  
[생성될 .gitignore의 내용](https://gist.github.com/LeeHanYeong/463837a5c5338fa745c0f3b9b2fba5f0)

이후 `git`명령어는 아래와 같이 실행한다.

```
git init
git add -A
git commit -m 'First commit: First FT and basic Django config'
```


## 그 외
이후 `webdriver.Firefox()`를 사용하는 부분들은 전부 `webdriver.Chrome()`을 사용한다.
